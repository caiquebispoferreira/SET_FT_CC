

CREATE OR REPLACE FUNCTION CALCTOT_PRESC_COMPANY
    ( vCOMPANY_ID COMPANY.COMPANY_ID%TYPE )
   RETURN NUMBER
IS 
  TOTAL NUMBER := 0;
BEGIN
   SELECT COUNT(*) 
   INTO TOTAL
    FROM PRESCRIPTION 
    WHERE ID IN (
        SELECT ID 
        FROM COMPANYXPATIENT 
        WHERE COMPANYXPATIENT.COMPANY_ID = vCOMPANY_ID
    );
    RETURN TOTAL;
END;
/*
DECLARE 
    vCOMPANY_ID NUMBER := 1;
BEGIN 
    DBMS_OUTPUT.PUT_LINE( 'COMPANY_ID: '||vCOMPANY_ID||','||
                   'TOTAL: '|| CALCTOT_PRESC_COMPANY(vCOMPANY_ID));
END;
*/
/
CREATE OR REPLACE 
PROCEDURE UPD_TOT_PRESC_COMPANY
IS
    vOld_PRESC_AMOUNT COMPANY.PRESC_AMOUNT%TYPE := 0;
    TYPE type_COMPANY_PRESC IS RECORD (
        COMPANY_ID COMPANY.COMPANY_ID%TYPE,
        TOTAL  NUMBER
      );
    rec_COMPANY_PRESC type_COMPANY_PRESC;
    CURSOR C_COMPANY_PRESC IS 
        SELECT * 
        FROM (
            SELECT COMPANY_ID , 
               CALCTOT_PRESC_COMPANY(COMPANY_ID) AS TOTAL
            FROM COMPANY 
        );
BEGIN
    OPEN C_COMPANY_PRESC;
    LOOP
        FETCH C_COMPANY_PRESC INTO rec_COMPANY_PRESC;
        EXIT WHEN C_COMPANY_PRESC%NOTFOUND;
            
            SELECT PRESC_AMOUNT
            INTO vOld_PRESC_AMOUNT
            FROM COMPANY
            WHERE COMPANY_ID = rec_COMPANY_PRESC.COMPANY_ID;
            
            UPDATE COMPANY SET PRESC_AMOUNT = rec_COMPANY_PRESC.TOTAL
            WHERE COMPANY_ID = rec_COMPANY_PRESC.COMPANY_ID;
            COMMIT;
            
            DBMS_OUTPUT.PUT_LINE( 'COMPANY_ID: '||rec_COMPANY_PRESC.COMPANY_ID
                    ||','||'OLD_PRESC_AMOUNT: '|| vOld_PRESC_AMOUNT
                    ||','||'NEW_PRESC_AMOUNT: '|| rec_COMPANY_PRESC.TOTAL);
            
    END LOOP;
    CLOSE C_COMPANY_PRESC;
END;
/*
BEGIN
    UPD_TOT_PRESC_COMPANY();
END;
*/
/
CREATE OR REPLACE FUNCTION CALCTOT_PRESC_DOCTOR(IN_DOCTOR_ID IN NUMBER) 
RETURN NUMBER 
IS 
  PRESCRIPTION_DETAILS NUMBER; 
BEGIN 
    SELECT COUNT(*) 
    INTO   PRESCRIPTION_DETAILS 
    FROM   PRESCRIPTION PRESCRIPTION 
    WHERE  PRESCRIPTION.DOCTOR_ID = IN_DOCTOR_ID; 

    RETURN( PRESCRIPTION_DETAILS ); 
END; 

/*
DECLARE 
    vDOCTOR_ID NUMBER := 1;
BEGIN 
    DBMS_OUTPUT.PUT_LINE( 'DOCTOR_ID: '||vDOCTOR_ID||','||
                   'TOTAL: '|| CALCTOT_PRESC_DOCTOR(vDOCTOR_ID));
END;
*/
/
CREATE OR REPLACE 
PROCEDURE UPD_TOT_PRESC_DOCTOR
IS
    vOld_PRESC_AMOUNT DOCTOR.PRESC_AMOUNT%TYPE := 0;
    TYPE type_DOCTOR_PRESC IS RECORD (
        DOCTOR_ID DOCTOR.DOCTOR_ID%TYPE,
        TOTAL  NUMBER
      );
    rec_DOCTOR_PRESC type_DOCTOR_PRESC;
    CURSOR C_DOCTOR_PRESC IS 
        SELECT * 
        FROM (
            SELECT DOCTOR_ID , 
               CALCTOT_PRESC_DOCTOR(DOCTOR_ID) AS TOTAL
            FROM DOCTOR 
        );
BEGIN
    OPEN C_DOCTOR_PRESC;
    LOOP
        FETCH C_DOCTOR_PRESC INTO rec_DOCTOR_PRESC;
        EXIT WHEN C_DOCTOR_PRESC%NOTFOUND;
            
            SELECT PRESC_AMOUNT
            INTO vOld_PRESC_AMOUNT
            FROM DOCTOR
            WHERE DOCTOR_ID = rec_DOCTOR_PRESC.DOCTOR_ID;
            
            UPDATE DOCTOR SET PRESC_AMOUNT = rec_DOCTOR_PRESC.TOTAL
            WHERE DOCTOR_ID = rec_DOCTOR_PRESC.DOCTOR_ID;
            COMMIT;
            
            DBMS_OUTPUT.PUT_LINE( 'DOCTOR_ID: '||rec_DOCTOR_PRESC.DOCTOR_ID
                    ||','||'OLD_PRESC_AMOUNT: '|| vOld_PRESC_AMOUNT
                    ||','||'NEW_PRESC_AMOUNT: '|| rec_DOCTOR_PRESC.TOTAL);
            
    END LOOP;
    CLOSE C_DOCTOR_PRESC;
END;
/
/*
BEGIN
    UPD_TOT_PRESC_DOCTOR();
END;
*/
/*
CREATE OR REPLACE TRIGGER AUTO_PROC_CALL
    AFTER 
        INSERT OR DELETE 
    ON PRESCRIPTION
    FOR EACH ROW    
DECLARE
BEGIN
  UPD_TOT_PRESC_COMPANY();
  UPD_TOT_PRESC_DOCTOR();
END;

*/